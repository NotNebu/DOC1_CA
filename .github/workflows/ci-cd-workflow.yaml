name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend unit tests (Vitest)
        working-directory: frontend
        run: npx vitest run

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Run backend unit tests (dotnet test)
        working-directory: backend.tests
        run: dotnet test

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/viatabloid-backend ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/viatabloid-backend

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/viatabloid-frontend ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/viatabloid-frontend

      - name: Build and push migrator image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/viatabloid-migrator -f Dockerfile.migrator .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/viatabloid-migrator

  minikube-deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/

      - name: Verify services
        run: kubectl get all
